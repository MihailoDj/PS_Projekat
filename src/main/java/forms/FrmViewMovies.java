/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import forms.components.table.MovieTableModel;
import forms.util.FormMode;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import domain.Movie;
import domain.Director;
import controller.Controller;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Mihailo
 */
public class FrmViewMovies extends javax.swing.JDialog {

    /**
     * Creates new form FrmPrikazFilmova
     */
    public FrmViewMovies(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        prepareView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMovies = new javax.swing.JTable();
        btnDetails = new javax.swing.JButton();
        btnAddMovie = new javax.swing.JButton();
        btnDeleteMovie = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblMovies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Naziv", "Datum izdanja", "Prosečna ocena", "Režiser"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMovies);

        btnDetails.setText("Details");
        btnDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailsActionPerformed(evt);
            }
        });

        btnAddMovie.setText("Add movie");
        btnAddMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMovieActionPerformed(evt);
            }
        });

        btnDeleteMovie.setText("Delete movie");
        btnDeleteMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMovieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddMovie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeleteMovie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(btnAddMovie)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeleteMovie)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDetails)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailsActionPerformed
        int row = tblMovies.getSelectedRow();
        
        if (row != -1) {
            Movie movie = ((MovieTableModel)tblMovies.getModel()).getMovie(row);
            new FrmMovie(null, true, FormMode.FORM_VIEW, movie).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "You need to select a movie from the table.", 
                    "Error!", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnDetailsActionPerformed

    private void btnAddMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMovieActionPerformed
        
        new FrmMovie(null, true, FormMode.FORM_ADD, null).setVisible(true);
    }//GEN-LAST:event_btnAddMovieActionPerformed

    private void btnDeleteMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMovieActionPerformed
        int row = tblMovies.getSelectedRow();
        
        if (row != -1) {
            int check = JOptionPane.showConfirmDialog(this, "Are you sure?", "Delete movie",
                    JOptionPane.YES_NO_OPTION);
            
            if (check == JOptionPane.YES_OPTION) {
                MovieTableModel mtm = (MovieTableModel) tblMovies.getModel();
                mtm.removeMovie(row);
            }
            
        } else {
            JOptionPane.showMessageDialog(this, "You need to select a movie from the table.",
                    "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteMovieActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMovie;
    private javax.swing.JButton btnDeleteMovie;
    private javax.swing.JButton btnDetails;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMovies;
    // End of variables declaration//GEN-END:variables

    private void prepareView() {
        setTitle("View movies");
        setLocationRelativeTo(null);
        
        fillMoviesTable();
    }

    public void fillMoviesTable() {
        try {
            List<Movie> movies = Controller.getInstance().selectAllMovies();
            MovieTableModel mtm = new MovieTableModel(movies);
            tblMovies.setModel(mtm);
            
            List<Director> directors = Controller.getInstance().selectAllDirectors();
            JComboBox cbDirectors = new JComboBox(directors.toArray());
            
            TableColumnModel tcm = tblMovies.getColumnModel();
            TableColumn tcDirector = tcm.getColumn(5);
            
            tcDirector.setCellEditor(new DefaultCellEditor(cbDirectors));
        } catch (Exception ex) {
            Logger.getLogger(FrmViewMovies.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Unable to load table.", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }
}
